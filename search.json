[{"title":"openVFIFE","url":"/2021/05/07/openVFIFE/","content":""},{"title":"谐波合成法的Python实现及其使用手册","url":"/2021/06/13/WAWS/","content":"程序地址：https://gitee.com/ginkgoltd/waws, \n编程语言：Python3\n作者：GinkGo\nEmail: ginkgoltd@outlook.com\n谐波合成法以功率谱作为权系数，与一系列带随机相位的三角级数的加权和来逐渐逼近随机过程，适用于指定谱特征的平稳高斯随机过程。该方法有恒幅谐波叠加法和加权振幅谐波叠加法(尚未阅读相关文献). \n谐波合成法基本步骤Step 1:  选取目标风速谱$S(w)$和相干函数$coh(x_i, x_j, y_i, y_j, z_i, z_j, f)$,确定模拟点坐标\nStep 2: 生成互谱密度矩阵\n\nS(w) = \\begin{bmatrix} S_{11}(\\omega) &  S_{12}(\\omega)  ...  & S_{1n}(\\omega) \\\\\n                   S_{21}(\\omega) &  S_{22}(\\omega)  ...  & S_{2n}(\\omega) \\\\\n                   . & ........ & . \\\\\n                   . & ........ & . \\\\\n                   . & ........ & . \\\\\n                   S_{n1}(\\omega) &  S_{n2}(\\omega)  ...  & S_{nn}(\\omega) \\\\\\end{bmatrix}\\\\\nS_{ij}(\\omega)=\\sqrt{ S_{i}(\\omega) S_{j}(\\omega)}coh(x_i,x_j,y_i,y_j,z_i,z_j,\\omega)Step 3: 对互谱密度矩阵进行cholesky分解\n\nS(w) =H(w) H^T(w)\\\\\\\\\nH(w) = \\begin{bmatrix} H_{11}(\\omega) &  0 ...  & 0 \\\\\n                   H_{21}(\\omega) &  H_{22}(\\omega)  ...  & 0 \\\\\n                   . & ........ & . \\\\\n                   . & ........ & . \\\\\n                   H_{n1}(\\omega) & H_{n2}(\\omega)  ...  & H_{nn}(\\omega) \\\\\\end{bmatrix}Step 4: (option 1):   M. Shinuzuka提出的单索引频率法\n这种算法最简单, 只需互谱密度矩阵进行$N$次cholesky分解($n \\times n$阶矩阵). 但是由于频率均匀分布可能导致模拟曲线出现周期性1. (具体情况尚未进行过详细地分析, 有机会在做吧, 暂且相信文献的结论)\n\nV_j(t) = 2\\sqrt{\\Delta \\omega} \\sum_{m=1}^{j} \\sum_{l=1}^{N}|H_{jm}(\\omega_{l})cos(\\omega_l t + \\theta_{jm}(\\omega_l) + \\phi_{ml})\\\\\n\\omega_l = l\\Delta\\omega, l = 1,2,3,...,NStep 4 (option 2):  Deodatis双索引频率法计算模拟点风速时程\n公式来源于&lt;基于实测风特性的台风模拟&gt;(杨素珍)2由于option 1可能存在模拟风速时程出现周期性的问题, 引入了双索引频率, 将频率微小扰量均匀分布在频率增量内, 这样既可以采用FFT算法, 又能保证模拟曲线的各态历经性. 但互谱密度矩阵的分解数量将明显提升, 达到$N \\times n$次($N$为频率等分数, $n$为模拟点数), 这样运算量将会增加; (但似乎采用numpy.linalg.cholesky()函数计算效率并不低)\n\nV_j(t) = 2\\sqrt{\\Delta\\omega}\\sum_{m=1}^{j}\\sum_{l=1}^{N}|H_{jm}(\\omega_{ml})| cos(\\omega_{ml}t - \\theta(\\omega_{ml}) + \\phi_{ml})\\\\\n\\phi_{ml}=rand[0,2\\pi]\\\\\n\\theta_{jm}=arctan[\\frac{Im[H_{jm}(\\omega_{ml})]}{Re[H_{jm}(\\omega_{ml})]}]\\\\\n\\omega_{ml} = (l-1)\\Delta\\omega + m/n\\Delta\\omega, l=1,2,3,...,N注意: 有的文献中将$2\\sqrt{\\Delta\\omega}$写成$\\sqrt{2\\Delta\\omega}$这是错的注意: 如果$S(w)$为实正定矩阵,则$H(w)$也为实矩阵,因此$\\theta_{jm}=0$\n实际上, 在采用双索引算法时,并非$H(\\omega_{ml})$矩阵中的所有元素都将用于最终的谐波叠加. 保留$H(\\omega_{ml}$矩阵中用到的元素, 组成如下有效元素矩阵\n\nH^{eff}(w) = \\begin{bmatrix} H_{11}(\\omega_{1l}) &  0 ...  & 0 \\\\\nH_{21}(\\omega_{1l}) &  H_{22}(\\omega_{2l})  ...  & 0 \\\\\n. & ........ & . \\\\\n. & ........ & . \\\\\nH_{n1}(\\omega_{1l}) & H_{n2}(\\omega_{2l})  ...  & H_{nn}(\\omega_{nl}) \\\\\\end{bmatrix}采用这种方式合成脉动风速需要多次累加计算, 模拟非常耗时, 尤其是当模拟点数较多时\nStep 4 (option 3):  采用FFT技术加速风速时程的合成\n公式都是自己推导的, 应该没有问题实际计算过程中发现整个模拟过程中合成风速时程是比较耗时的, 而采用FFT技术可以显著提升模拟速度\n\nV_j(t) = 2\\sqrt{\\Delta\\omega}\\sum_{m=1}^{j}\\sum_{l=1}^{N}|H_{jm}(\\omega)| cos(\\omega_{ml}t - \\theta(\\omega_{ml}) + \\phi_{ml})\\\\引入欧拉公式$e^{ix} = cosx + isinx$,且$\\theta_{jm}(\\omega_{wl}=0$, 上式可以改写为\n\nV_j(t) = 2\\sqrt{\\Delta\\omega}\\sum_{m=1}^{j}\\sum_{l=1}^{N}|H_{jm}(\\omega_{ml})| Re[e^{i(\\omega_{ml}t + \\phi_{ml})}]\\\\\n= Re[2\\sqrt{\\Delta\\omega}\\sum_{m=1}^{j}\\sum_{l=1}^{N}|H_{jm}(\\omega_{ml})| e^{i\\omega_{ml}t} e^{i\\phi_{ml}}]\\\\\n=Re[\\sum_{m=1}^{j}(\\sum_{l=1}^{N} 2 \\sqrt{\\Delta\\omega} |H_{jm}(\\omega_{ml})| e^{i\\omega_{ml}t} e^{i\\phi_{ml} })]代入$\\omega_{ml} = (l-1)\\Delta\\omega + \\frac{m}{n}\\Delta\\omega$, 上式可以改写为\n\nV_j(t) = Re[\\sum_{m=1}^{j}(\\sum_{l=1}^{N} 2 \\sqrt{\\Delta\\omega} |H_{jm}(\\omega_{ml})| e^{i((l-1)\\Delta\\omega + \\frac{m}{n}\\Delta\\omega)t} e^{i\\phi_{ml} })]\\\\\n=Re[\\sum_{m=1}^{j}(\\sum_{l=1}^{N} 2 \\sqrt{\\Delta\\omega} e^{i\\phi_{ml}} |H_{jm}(\\omega_{ml})| e^{i((l-1)\\Delta\\omega t} )e^{i\\frac{m}{n}\\Delta\\omega t} ]\\\\\n= Re[\\sum_{m=1}^{j}G_{jm}(p\\Delta t) e^{i\\frac{m}{n} \\Delta \\omega t}]注意, 上式中括号内部分刚好是离散傅里叶逆变换的表达式\n\nG_{jm} = (\\sum_{l=1}^{N} 2 \\sqrt{\\Delta\\omega} e^{i\\phi_{ml}} |H_{jm}(\\omega_{ml})| e^{i(l-1)\\Delta\\omega t} )\\\\令$k = l - 1, (k=0,1,2,…,N-1)$ 且 , $B_{jm} = 2 \\sqrt{\\Delta\\omega} e^{i\\phi_{ml}} |H_{jm}(\\omega_{ml})|, \\Delta\\omega=\\frac{\\omega}{N}=\\frac{2\\pi f}{N}$,上式可以改写为\n\nG_{jm}(p\\Delta t) = (\\sum_{l=1}^{N}B_{jm} e^{ik\\Delta\\omega t} ) = (\\sum_{k=0}^{N-1}B_{jm} e^{i k \\Delta \\omega p\\Delta t} )信号的最长周期$T_0 = \\frac{2\\pi}{\\Delta \\omega}$, 若采样时间间隔为$\\Delta t$, 一个周期内的时间点数为$M = \\frac{T_0}{\\Delta t}$, 则\n\nT_0 = M \\Delta t = \\frac{2 \\pi}{\\Delta \\omega}\\\\\n\\Delta t \\Delta \\omega = \\frac{2 \\pi}{M}带入上上式中\n\nG_{jm}(p\\Delta t) = (\\sum_{l=1}^{N}B_{jm} e^{ik\\Delta\\omega t} ) = (\\sum_{k=0}^{M-1}B_{jm} e^{i kp \\frac{2\\pi}{M}})\\\\\nB_{jm} = \\left \\{ \n\\begin{aligned}\n2 \\sqrt{\\Delta\\omega} e^{i\\phi_{ml}} |H_{jm}(\\omega_{ml})|, 0 \\leq l < N \\\\\n0,  N \\leq < l ","categories":["Softwae"]}]